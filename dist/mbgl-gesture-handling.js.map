{"version":3,"file":"mbgl-gesture-handling.js","sources":["../src/index.js"],"sourcesContent":["\"use strict\"\n\nclass GestureHandling {\n  constructor(options) {\n    const defaults = {\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      textColor: '#ffffff',\n      textMessage: 'Use [alt] + scroll to zoom the map.',\n      timeout: 2000,\n    };\n\n    this.settings = {\n      ...defaults, ...options\n    }\n\n    this.alertBox = document.createElement('div');\n    this.alertBox.style.backgroundColor = this.settings.backgroundColor;\n    this.alertBox.style.position = 'absolute';\n    this.alertBox.style.display = 'none';\n    this.alertBox.style.zIndex = 9999;\n    this.alertBox.style.justifyContent = 'center';\n    this.alertBox.style.alignItems = 'center';\n\n    const textBox = document.createElement('div');\n    textBox.style.textAlign = 'center';\n    textBox.style.color = this.settings.textColor;\n    textBox.innerText = this.settings.textMessage;\n\n    this.alertBox.appendChild(textBox);\n    document.body.appendChild(this.alertBox);\n  }\n\n  addTo(map) {\n    map.scrollZoom.disable();\n\n    const container = map.getContainer();\n    const rect = container.getBoundingClientRect();\n\n    this.alertBox.style.top = `${rect.top}px`;\n    this.alertBox.style.left = `${rect.left}px`;\n    this.alertBox.style.width = `${rect.width}px`;\n    this.alertBox.style.height = `${rect.height}px`;\n\n    document.addEventListener('wheel', (event) => {\n      if (event.altKey) {\n        map.scrollZoom.enable();\n      } else {\n        this.alertBox.style.display = 'flex';\n      }\n\n      setTimeout(() => {\n        this.alertBox.style.display = 'none';\n        map.scrollZoom.disable();\n      }, this.settings.timeout);\n\n      event.preventDefault();\n    })\n  }\n}\n\nexport default GestureHandling;\n"],"names":["GestureHandling","constructor","options","settings","Object","alertBox","document","createElement","style","backgroundColor","this","position","display","zIndex","justifyContent","alignItems","textBox","textAlign","color","textColor","innerText","textMessage","appendChild","body","addTo","map","scrollZoom","disable","rect","getContainer","getBoundingClientRect","top","left","width","height","addEventListener","event","altKey","enable","timeout","preventDefault"],"mappings":"AAEA,IAAMA,EACJC,SAAYC,QAQLC,SAAWC,iBAPC,iBACE,+BACN,sBACE,8CACJ,aAONC,SAAWC,SAASC,cAAc,YAClCF,SAASG,MAAMC,gBAAkBC,KAAKP,SAASM,qBAC/CJ,SAASG,MAAMG,SAAW,gBAC1BN,SAASG,MAAMI,QAAU,YACzBP,SAASG,MAAMK,OAAS,UACxBR,SAASG,MAAMM,eAAiB,cAChCT,SAASG,MAAMO,WAAa,aAE3BC,EAAUV,SAASC,cAAc,OACvCS,EAAQR,MAAMS,UAAY,WAClBT,MAAMU,MAAQR,KAAKP,SAASgB,YAC5BC,UAAYV,KAAKP,SAASkB,iBAE7BhB,SAASiB,YAAYN,YACjBO,KAAKD,YAAYZ,KAAKL,WAGjCmB,YAAAA,eAAMC,cACJA,EAAIC,WAAWC,cAGTC,EADYH,EAAII,eACCC,6BAElBzB,SAASG,MAAMuB,IAASH,gBACxBvB,SAASG,MAAMwB,KAAUJ,iBACzBvB,SAASG,MAAMyB,MAAWL,kBAC1BvB,SAASG,MAAM0B,OAAYN,uBAEvBO,iBAAiB,iBAAUC,GAC9BA,EAAMC,OACRZ,EAAIC,WAAWY,WAEVjC,SAASG,MAAMI,QAAU,+BAIzBP,SAASG,MAAMI,QAAU,OAC9Ba,EAAIC,WAAWC,WACdjB,EAAKP,SAASoC,SAEjBH,EAAMI"}